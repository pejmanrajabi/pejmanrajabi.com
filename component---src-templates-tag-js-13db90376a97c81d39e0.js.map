{"version":3,"file":"component---src-templates-tag-js-13db90376a97c81d39e0.js","mappings":"2LA2CA,EAlCiB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,EAAIC,EAAY,EAAZA,OACrBC,EAAaH,EAAKI,YAAYC,SACpC,OAAOC,EAAAA,cAAoB,UAAW,CAClCC,UAAWC,QAAyBN,GAAUC,GAAc,GAAMF,EAAI,ECAnD,ODAiB,KACrCK,EAAAA,cAAoBG,EAAAA,KAAM,CACzBF,UCHuB,ODIvBG,GAAG,IAAKV,EAAKI,YAAYO,SAAvB,IAAmCX,EAAKY,OAAOC,MAClDP,EAAAA,cAAoBQ,EAAAA,EAAU,CAC7BP,UCPmB,ODQnBQ,IAAKf,EAAKI,YAAYY,MACtBC,MAAOjB,EAAKI,YAAYa,MAAMC,gBAAgBC,mBAC7Cb,EAAAA,cAAoB,MAAO,CAC5BC,UCfqB,QDgBtBD,EAAAA,cAAoBG,EAAAA,KAAM,CACzBF,UChByB,ODiBzBG,GAAG,IAAKV,EAAKI,YAAYO,SAAvB,IAAmCX,EAAKY,OAAOC,MAClDP,EAAAA,cAAoB,SAAU,CAC7BC,UCjBoB,QDkBrBD,EAAAA,cAAoB,MAAO,CAC1BC,UCdwB,aDeIa,IAA7BpB,EAAKI,YAAYiB,KAAK,IAAoBrB,EAAKI,YAAYiB,KAAK,IAAKf,EAAAA,cAAoB,KAAM,CAC9FC,UCfmB,QDgBpBP,EAAKI,YAAYY,QAASV,EAAAA,cAAoB,UAAW,CACxDC,UCxBqB,QDyBtBD,EAAAA,cAAoB,IAAK,KAAMN,EAAKI,YAAYkB,KAAOtB,EAAKI,YAAYkB,KAAOtB,EAAKuB,WAAYjB,EAAAA,cAAoB,SAAU,CAC7HC,UCrBkB,QDsBnBD,EAAAA,cAAoB,MAAO,CAC1BC,UChC2B,QDiC5BD,EAAAA,cAAoB,OAAQ,CAC3BC,UCjCwB,QDkCzBD,EAAAA,cAAoB,OAAQ,CAC3BkB,SAAUxB,EAAKI,YAAYqB,MAC5BzB,EAAKI,YAAYqB,MAAO,UEtClBC,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAOzB,EAAY,EAAZA,OAC9B,OAAOI,EAAAA,cAAoB,MAAO,CAC9BC,UCHW,ODIZD,EAAAA,cAAoB,MAAO,CAC1BC,UCNc,ODOfoB,EAAKC,MAAMC,MAAMC,KAAI,SAAC9B,EAAMC,GAC3B,OAAOK,EAAAA,cAAoByB,EAAU,CACjC/B,KAAMA,EACNC,EAAGA,EACH+B,IAAK/B,EACLC,OAAQA,W,8GEPd+B,EAAU,SAAC,GAAa,IAAXN,EAAU,EAAVA,KACf,OAAOrB,EAAAA,cAAoB,SAAU,CACjCC,UAAW,uBACZD,EAAAA,cAAoB4B,EAAAA,EAAkB,CACrCjB,MAAOU,EAAKQ,IAAIlB,MAAMC,gBAAgBC,iBACvCb,EAAAA,cAAoB,MAAO,CAC1BC,UAAU,kBACXD,EAAAA,cAAoB,KAAM,CACzBC,UAAW,cACZoB,EAAKQ,IAAItB,MAAOP,EAAAA,cAAoB,KAAM,CACzCC,UAAW,oBACZoB,EAAKQ,IAAIC,aAAeT,EAAKQ,IAAIC,aAAeT,EAAKC,MAAMC,MAAMQ,OAAS,cAejF,EAboB,SAAC,GAAa,IAAXV,EAAU,EAAVA,KACnB,OAAOrB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBgC,EAAAA,EAAQ,CACzEC,SAAU,MACVZ,KAAMA,EACNa,OAAQlC,EAAAA,cAAoB2B,EAAS,CACjCN,KAAMA,KAEXrB,EAAAA,cAAoB,MAAO,CAC1BC,UAAW,SACZD,EAAAA,cAAoBoB,EAAAA,EAAU,CAC7BC,KAAMA","sources":["webpack://pejmanrajabi.com/./src/components/Sections/Posts/PostCard/PostCard.js","webpack://pejmanrajabi.com/./src/components/Sections/Posts/PostCard/PostCard.module.scss","webpack://pejmanrajabi.com/./src/components/Sections/Posts/PostFeed/PostFeed.js","webpack://pejmanrajabi.com/./src/components/Sections/Posts/PostFeed/PostFeed.module.scss","webpack://pejmanrajabi.com/./src/templates/tag.js"],"sourcesContent":["import * as React from 'react';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport * as styles from './PostCard.module.scss';\nimport { Link } from 'gatsby';\nconst options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n};\nconst PostCard = ({ post , i , isHome  })=>{\n    const isFeatured = post.frontmatter.featured;\n    return React.createElement(\"article\", {\n        className: styles.postCard + ` ` + (isHome && isFeatured && 0 === i % 6 && styles.postCardLarge || ``)\n    }, React.createElement(Link, {\n        className: styles.postCardImageLink,\n        to: `/${post.frontmatter.category}/${post.fields.slug}`\n    }, React.createElement(ImgSharp, {\n        className: styles.postCardImage,\n        alt: post.frontmatter.title,\n        image: post.frontmatter.image.childImageSharp.gatsbyImageData\n    })), React.createElement(\"div\", {\n        className: styles.postCardContent\n    }, React.createElement(Link, {\n        className: styles.postCardContentLink,\n        to: `/${post.frontmatter.category}/${post.fields.slug}`\n    }, React.createElement(\"header\", {\n        className: styles.postCardHeader\n    }, React.createElement(\"div\", {\n        className: styles.postCardPrimaryTag\n    }, post.frontmatter.tags[0] !== undefined && post.frontmatter.tags[0]), React.createElement(\"h2\", {\n        className: styles.postCardTitle\n    }, post.frontmatter.title)), React.createElement(\"section\", {\n        className: styles.postCardExcerpt\n    }, React.createElement(\"p\", null, post.frontmatter.desc ? post.frontmatter.desc : post.excerpt))), React.createElement(\"footer\", {\n        className: styles.postCardMeta\n    }, React.createElement(\"div\", {\n        className: styles.postCardBylineContent\n    }, React.createElement(\"span\", {\n        className: styles.postCardBylineDate\n    }, React.createElement(\"time\", {\n        dateTime: post.frontmatter.date\n    }, post.frontmatter.date), ' ')))));\n};\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nexport var bull = \"w_r\";\nexport var noImage = \"w_5\";\nexport var postCard = \"w_z\";\nexport var postCardBylineContent = \"w_bX\";\nexport var postCardBylineDate = \"w_bY\";\nexport var postCardContent = \"w_bT\";\nexport var postCardContentLink = \"w_bP\";\nexport var postCardExcerpt = \"w_bV\";\nexport var postCardHeader = \"w_bQ\";\nexport var postCardImage = \"w_bN\";\nexport var postCardImageLink = \"w_bM\";\nexport var postCardLarge = \"w_bZ\";\nexport var postCardMeta = \"w_bW\";\nexport var postCardPrimaryTag = \"w_bR\";\nexport var postCardTitle = \"w_bS\";","import * as React from 'react';\nimport PostCard from '../PostCard/PostCard';\nimport * as styles from './PostFeed.module.scss';\nexport const PostFeed = ({ data , isHome  })=>{\n    return React.createElement(\"div\", {\n        className: styles.posts\n    }, React.createElement(\"div\", {\n        className: styles.postFeed\n    }, data.posts.nodes.map((post, i)=>{\n        return React.createElement(PostCard, {\n            post: post,\n            i: i,\n            key: i,\n            isHome: isHome\n        });\n    })));\n};\n","// extracted by mini-css-extract-plugin\nexport var postFeed = \"q_1\";\nexport var posts = \"q_0\";","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~src/components/Layout/Layout';\nimport HeaderBackground from '~src/components/utils/Header/HeaderBackground';\nimport { PostFeed } from '~src/components/Sections/Posts/PostFeed/PostFeed';\nimport * as styles from './tag.module.scss';\nconst TagHero = ({ data  })=>{\n    return React.createElement(\"header\", {\n        className: \"site-archive-header\"\n    }, React.createElement(HeaderBackground, {\n        image: data.tag.image.childImageSharp.gatsbyImageData\n    }, React.createElement(\"div\", {\n        className: `\"inner \" + ${styles.archiveHeaderContent}`\n    }, React.createElement(\"h1\", {\n        className: \"site-title\"\n    }, data.tag.slug), React.createElement(\"h2\", {\n        className: \"site-description\"\n    }, data.tag.description && data.tag.description || data.posts.nodes.length + \" Posts\"))));\n};\nconst TagTemplate = ({ data  })=>{\n    return React.createElement(React.Fragment, null, React.createElement(Layout, {\n        template: \"tag\",\n        data: data,\n        header: React.createElement(TagHero, {\n            data: data\n        })\n    }, React.createElement(\"div\", {\n        className: \"inner\"\n    }, React.createElement(PostFeed, {\n        data: data\n    }))));\n};\nexport default TagTemplate;\nexport const TagTemplateQuery = graphql`\n\tquery Tag($id: String!) {\n\t\ttag: tagsYaml(slug: { eq: $id }) {\n\t\t\tid\n\t\t\tslug\n\t\t\tdescription\n\t\t\timage {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tgatsbyImageData(layout: FULL_WIDTH, formats: [AUTO, JPG, WEBP, AVIF], placeholder: TRACED_SVG)\n\t\t\t\t  }\n\t\t\t}\n\t\t\n\t\t}\n\t\tposts: allMdx(filter: { frontmatter: { tags: { in: [$id] } } }) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\tdate(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttitle\n\t\t\t\t\ttags\n\t\t\t\t\tcategory\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData(layout: FULL_WIDTH, formats: [AUTO, JPG, WEBP, AVIF], placeholder: TRACED_SVG)\n\t\t\t\t\t\t  }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(pruneLength: 200, truncate: true)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"names":["post","i","isHome","isFeatured","frontmatter","featured","React","className","styles","Link","to","category","fields","slug","ImgSharp","alt","title","image","childImageSharp","gatsbyImageData","undefined","tags","desc","excerpt","dateTime","date","PostFeed","data","posts","nodes","map","PostCard","key","TagHero","HeaderBackground","tag","description","length","Layout","template","header"],"sourceRoot":""}